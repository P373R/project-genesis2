/*! * Map Scroller v1.0.0 * A jQuery Plugin that makes any html element scrollable in a custom way. * Copyright 2010, Anand, Vijaya .M * Date: Thursday, September 18th 2010 * * Usage: * 		$(selector).mapScroll(direction); //enable scrolling *					direction - which direction the scrolling is allowed * 								vertical, horizontal or both(default)   		 * */  (function($){	var eventHandlers = {		mousemove: function(e){			var $this = $(this), 			    scroll = $this.data("scroll"), 				prevPos = $this.data("position"),				scrollFn = $this.data("scrollFn");						if(scroll){							var diffX = prevPos.x - e.pageX, 				    diffY = prevPos.y - e.pageY;										scrollFn($this, diffX, diffY);								$this.data("position", {x:e.pageX, y:e.pageY});			}		},				mouseupout: function(e){			$(this).data("scroll", false);								$(this).removeClass("closedhand")				   .addClass("openhand");		},				mousedown: function(e){						   			$(this).data("scroll", true)				   .data("position", {x : e.pageX, y : e.pageY});				   			$(this).removeClass("openhand")				   .addClass("closedhand");				   		}	};			$.fn.mapScroll = function(direction){		//assigning scroll function		var scrollFn = (function(){			switch(direction || "both")				{					case "vertical":						return function($this,x,y){ 							$this.scrollTop( $this.scrollTop() + y ); 						};   				    case "horizontal":						return function($this,x,y){ 							$this.scrollLeft( $this.scrollLeft() + x ); 						};					case "both":						return function($this,x,y){ 							$this.scrollTop( $this.scrollTop() + y).scrollLeft($this.scrollLeft() + x );						};								}				})();						return this.each(function(){			//disabling text selection			$(this).disableTextSelect();						//binding event-handlers			$(this).bind("mousemove", eventHandlers.mousemove)				   .bind("mouseup mouseout", eventHandlers.mouseupout)				   .bind("mousedown", eventHandlers.mousedown);						//adding class			$(this).addClass("openhand");							//caching the scroll function.			$(this).data("scrollFn", scrollFn);					});	};		})(jQuery);